variables:
  GIT_STRATEGY: fetch
  GIT_SUBMODULE_STRATEGY: recursive
# PREFIX: /usr/
  DOCKER_FILE: utils/Dockerfile
  DOCKER_TAG: ${CI_COMMIT_REF_NAME}
  DOCKER_IMAGE_DEV: cricket
  # MAKE_OPTS: -j 16

before_script:
  - git config --local core.longpaths true
  - git submodule sync --recursive
  - git submodule update --init --recursive

stages:
  - prepare
  - build
  - test

# Stage: prepare
##############################################################################

# Build docker image
prepare:centos8:docker-dev:
  stage: prepare
  script:
    - cp -r ~/.ssh .
    - docker build
        --file ${DOCKER_FILE}
        --tag ${DOCKER_IMAGE_DEV}:${DOCKER_TAG}
        --tag ${DOCKER_IMAGE_DEV}:latest .
  tags:
    - shell
    - linux

# check if styleguide is fulfilled
#style_check:
#  stage: build
#  image: ${DOCKER_IMAGE_DEV}:${DOCKER_TAG}
#  allow_failure: true
#  tags:
#    - docker
#  script:
#    - ls
#    - utils/test_style.sh

# Stage: build
##############################################################################

build:
  stage: build
  script:
   - make -j 32 LOG=INFO
   - make -c submodules/cuda-gdb/build
  artifacts:
    expire_in: 1 week
    paths:
      - bin
  image: ${DOCKER_IMAGE_DEV}:${DOCKER_TAG}
  cache:
    paths:
      - gpu/build
      - cpu/*.o
      - tests/*.o
      - submodules/libtirpc/install
      - bin
    key: build
  tags:
    - docker


.remote-gpu:
  stage: test
  variables:
    GPU_TARGET: 'gitlab-runner@ghost'
    RDIR: '/tmp/gitlab-jobs/$CI_PROJECT_NAME/$CI_JOB_ID'
    LDIR: '$CI_BUILDS_DIR/$CI_PROJECT_PATH/bin'
    SAMPLES_PATH: '/usr/local/cuda/samples'
  script:
    - ssh $GPU_TARGET mkdir -p $RDIR
    - scp -r $LDIR/* $GPU_TARGET:$RDIR/
    - ssh $GPU_TARGET "LD_PRELOAD=$RDIR/libtirpc.so.3:$RDIR/cricket-server.so $RDIR/$TEST_BINARY" &
    - sleep 2
    - PATH=$LDIR:$PATH LD_PRELOAD=$LDIR/libtirpc.so.3:$LDIR/cricket-client.so $LDIR/$TEST_BINARY
  after_script:
    - ssh $GPU_TARGET rm -rf $RDIR
    - ssh $GPU_TARGET pkill -fe -2 $RDIR/test_kernel
  image: ${DOCKER_IMAGE_DEV}:${DOCKER_TAG}
  dependencies:
    - build
  tags:
    - docker

test:test_kernel:
    extends: .remote-gpu
    variables:
      TEST_BINARY: 'test_kernel'

test:samples:matrixMul:
    extends: .remote-gpu
    variables:
      TEST_BINARY: 'matrixMul'
    before_script:
      - make -C $SAMPLES_PATH/0_Simple/matrixMul NVCCFLAGS="-m64 -cudart shared"
      - cp $SAMPLES_PATH/0_Simple/matrixMul/matrixMul $LDIR

test:samples:bandwidthTest:
    extends: .remote-gpu
    variables:
      TEST_BINARY: 'bandwidthTest'
    before_script:
      - ls $SAMPLES_PATH
      - ls $SAMPLES_PATH/1_Utilities
      - make -C $SAMPLES_PATH/1_Utilities/bandwidthTest NVCCFLAGS="-m64 -cudart shared"
      - cp $SAMPLES_PATH/1_Utilities/bandwidthTest/bandwidthTest $LDIR

