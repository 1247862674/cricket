diff --git a/src/mtcp/mtcp_restart.c b/src/mtcp/mtcp_restart.c
index c01d59cf..378aecd4 100644
--- a/src/mtcp/mtcp_restart.c
+++ b/src/mtcp/mtcp_restart.c
@@ -61,6 +61,8 @@
 #include "procmapsarea.h"
 #include "tlsutil.h"
 
+#include <cuda.h>
+
 /* The use of NO_OPTIMIZE is deprecated and will be removed, since we
  * compile mtcp_restart.c with the -O0 flag already.
  */
@@ -310,6 +312,17 @@ main(int argc, char *argv[], char **environ)
     mtcp_simulateread(rinfo.fd, &mtcpHdr);
     return 0;
   }
+    
+  /*int devCnt;
+  cuInit(0);
+  cuDeviceGetCount(&devCnt);
+  MTCP_PRINTF("cuda device count:%d\n", devCnt);
+
+  CUdevice cuDevice;
+  cuDeviceGet(&cuDevice, 0);
+  CUcontext cuContext;
+  cuCtxCreate(&cuContext, 0, cuDevice);
+*/
 
   rinfo.saved_brk = mtcpHdr.saved_brk;
   rinfo.restore_addr = mtcpHdr.restore_addr;
diff --git a/src/plugin/ipc/file/fileconnlist.cpp b/src/plugin/ipc/file/fileconnlist.cpp
index b6942e6f..7edbcef4 100644
--- a/src/plugin/ipc/file/fileconnlist.cpp
+++ b/src/plugin/ipc/file/fileconnlist.cpp
@@ -245,7 +245,9 @@ FileConnList::prepareShmList()
           strstr(area.name, "dmtcpSharedArea") != NULL ||
           strstr(area.name, "synchronization-log") != NULL ||
           strstr(area.name, "infiniband") != NULL ||
-          strstr(area.name, "synchronization-read-log") != NULL) {
+          strstr(area.name, "synchronization-read-log") != NULL ||
+          strstr(area.name, "/dev/nvidiactl") != NULL ||
+          strstr(area.name, "/dev/nvidia0") != NULL) {
         continue;
       }
 
@@ -294,17 +296,17 @@ FileConnList::prepareShmList()
       } else {
         // TODO: Shared memory areas with unlinked backing files.
         JASSERT(Util::strEndsWith(area.name, DELETED_FILE_SUFFIX)) (area.name);
-        if (Util::strStartsWith(area.name, DEV_ZERO_DELETED_STR) ||
+        /*if (Util::strStartsWith(area.name, DEV_ZERO_DELETED_STR) ||
             Util::strStartsWith(area.name, DEV_NULL_DELETED_STR)) {
           JWARNING(false) (area.name)
           .Text("Ckpt/Restart of anonymous shared memory not supported.");
-        } else {
+        } else {*/
           JTRACE("Will recreate shm file on restart.") (area.name);
 
           // Remove the DELETED suffix.
           area.name[strlen(area.name) - strlen(DELETED_FILE_SUFFIX)] = '\0';
           unlinkedShmAreas.push_back(area);
-        }
+        //}
       }
     }
   }
@@ -314,6 +316,9 @@ void
 FileConnList::recreateShmFileAndMap(const ProcMapsArea &area)
 {
   // TODO(kapil): Handle /dev/zero, /dev/random, etc.
+  if (Util::strStartsWith(area.name,DEV_ZERO_DELETED_STR)) {
+      return;
+  }
   // Recreate file in dmtcp-tmpdir;
   string filename = Util::removeSuffix(area.name, DELETED_FILE_SUFFIX);
 
@@ -370,12 +375,17 @@ FileConnList::remapShmMaps()
     ProcMapsArea *area = &shmAreas[i];
     FileConnection *fileCon = shmAreaConn[i];
     int fd = fileCon->getFds()[0];
+    if (area->name && (strcmp(area->name, "/dev/nvidiactl") == 0 ||
+                       strcmp(area->name, "/dev/nvidia0") == 0)) {
+        JTRACE("Skipping shared memory area") (area->name);
+        continue;
+    }
     JTRACE("Restoring shared memory area") (area->name) ((void *)area->addr);
     void *addr = _real_mmap(area->addr, area->size, area->prot,
                             MAP_FIXED | area->flags,
                             fd, area->offset);
-    JASSERT(addr != MAP_FAILED) (area->flags) (area->prot) (JASSERT_ERRNO).Text(
-      "mmap failed");
+    //JASSERT(addr != MAP_FAILED) (area->flags) (area->prot) (JASSERT_ERRNO).Text(
+    //  "mmap failed");
     _real_close(fd);
     processClose(fd);
   }
diff --git a/src/writeckpt.cpp b/src/writeckpt.cpp
index d8baeff5..b641d459 100644
--- a/src/writeckpt.cpp
+++ b/src/writeckpt.cpp
@@ -259,6 +259,10 @@ mtcp_writememoryareas(int fd)
       continue;
     } else if (Util::strEndsWith(area.name, DELETED_FILE_SUFFIX)) {
       /* Deleted File */
+    } else if (Util::strStartsWith(area.name, "/dev/nvidia0") ||
+               Util::strStartsWith(area.name, "/dev/nvidiactl")) {
+      // ignore nvidia shm areas
+      continue;
     } else if (area.name[0] == '/' && strstr(&area.name[1], "/") != NULL) {
       /* If an absolute pathname
        * Posix and SysV shared memory segments can be mapped as /XYZ
diff --git a/test/plugin/example/example.c b/test/plugin/example/example.c
index 6a327807..5c292ebb 100644
--- a/test/plugin/example/example.c
+++ b/test/plugin/example/example.c
@@ -43,14 +43,14 @@ static DmtcpBarrier barriers[] = {
 };
 
 DmtcpPluginDescriptor_t example_plugin = {
-  DMTCP_PLUGIN_API_VERSION,
-  DMTCP_PACKAGE_VERSION,
-  "example",
-  "DMTCP",
-  "dmtcp@ccs.neu.edu",
-  "Example plugin",
-  DMTCP_DECL_BARRIERS(barriers),
-  example_event_hook
+  .pluginApiVersion = DMTCP_PLUGIN_API_VERSION,
+  .dmtcpVersion = DMTCP_PACKAGE_VERSION,
+  .pluginName = "example",
+  .authorName = "DMTCP",
+  .authorEmail = "dmtcp@ccs.neu.edu",
+  .description = "Example plugin",
+  .numBarriers = DMTCP_DECL_BARRIERS(barriers),
+  .event_hook = example_event_hook
 };
 
 DMTCP_DECL_PLUGIN(example_plugin);
